name: Daily Scheduled UI Test Run in Staging

on:
  schedule:
    - cron: '0 0 * * 1-5' # Run every weekday at 8 AM HKT
  workflow_dispatch:

env:
  ENV_FILE: .env.staging

concurrency:
  group: ui_test
  cancel-in-progress: true

jobs:
  playwright-run:
    runs-on: ['self-hosted', 'arm64']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential python3 make g++ \
            libgtk-3-0 libnss3 libatk-bridge2.0-0 libgbm-dev libasound2 \
            libxss1 libgconf-2-4 libxtst6 libxrandr2 libasound2 libpangocairo-1.0-0 \
            libatk1.0-0 libcairo-gobject2 libgtk-3-0 libgdk-pixbuf2.0-0

      - name: Install project dependencies
        run: |
          npm ci
          npx playwright install chromium

      - name: Setup environment file
        run: |
          if [ -f "${{ env.ENV_FILE }}" ]; then
            cp ${{ env.ENV_FILE }} playwright/.env
          else
            echo "Warning: ${{ env.ENV_FILE }} not found"
          fi

      - name: Prepare report directory
        run: |
          mkdir -p playwright/reports/html
          mkdir -p playwright/reports/junit

      - name: Run Playwright tests
        continue-on-error: true
        run: |
          echo 'Running Playwright tests...'
          npx playwright test --config=playwright/playwright.config.ts --project=ClientPortal
          echo 'Playwright test run completed.'

      - name: Verify Playwright reports
        run: |
          echo "üîç Verifying Playwright reports..."
          if [ -f "playwright/reports/html/index.html" ]; then
            echo "‚úÖ HTML report generated successfully."
          else
            echo "‚ùå HTML report not found. Check test execution."
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.GH_RUNNER_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_RUNNER_SECRET_KEY }}
          role-to-assume: arn:aws:iam::474782107805:role/gh-runner-assume-role-s3
          aws-region: ap-east-1
          role-duration-seconds: 1200

      - name: Upload HTML Report as Artifact
        id: upload-report
        uses: actions/upload-artifact@v4
        with:
          name: UI-automation-test-report
          path: ./playwright/reports/html/index.html

      - name: Upload Result to AWS-S3
        run: |
          FILE_NAME=ui-test-report-$(date +%s).html
          echo "FILE_NAME=${FILE_NAME}" >> $GITHUB_ENV
          aws s3 cp playwright/reports/html/index.html s3://test-qa-report-474782107805/${FILE_NAME}
          HTML_PATH=https://test-qa-report-474782107805.s3.ap-east-1.amazonaws.com/${FILE_NAME}
          echo "HTML_PATH=${HTML_PATH}" >> $GITHUB_ENV
          echo "Check report here at ${HTML_PATH}"

      - name: Post Test Results to Teams
        if: always()
        run: |
          if [ -f "playwright/reports/html/index.html" ]; then
            STATUS="‚úÖ Scheduled UI Automation Run Completed Successfully in Staging."
          else
            STATUS="‚ùå Scheduled UI Automation Run Failed in Staging."
          fi

          curl -H "Content-Type: application/json" \
          -d "{\"text\": \"${STATUS}\n\nüìä [View Detailed Test Report](${HTML_PATH})\"}" \
          {WEBHOOK_URL}

          echo "Test results posted to Teams channel."

      - name: Cleanup
        run: |
          echo "Cleaning up workspace..."
          sudo rm -rf playwright/reports
          sudo rm -rf playwright/artifacts
          echo "Workspace cleaned."

      - name: Notify Completion
        run: |
          echo "All steps completed successfully."
          echo "Scheduled Playwright UI test run in Staging has finished."
          echo "Check the Teams channel for the report link."
          echo "HTML Report URL: ${HTML_PATH}"
