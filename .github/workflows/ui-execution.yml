name: UI Test Run by Environment Input

on:
  workflow_dispatch:
    inputs:
      env:
        type: choice
        description: Select the environment where the test should run
        options:
          - staging
          - uat

env:
  DOCKER_IMAGE: public.ecr.aws/o3s1j1s9/cypress:latest

concurrency:
  group: ui_test
  cancel-in-progress: true

jobs:
  cypress-run:
    runs-on: ['self-hosted', 'arm64']
    env:
      CYPRESS_INSTALL_BINARY: 0
      DISPLAY: :99
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 \
            libnss3 \
            libatk-bridge2.0-0 \
            libgbm-dev \
            libasound2 \
            build-essential \
            python3 \
            make \
            g++

      - name: Install npm dependencies
        run: |
          npm ci
          npm install --save-dev mochawesome-merge mochawesome-report-generator

      - name: Set ENV variables
        run: |
          echo "ENV_NAME=${{ github.event.inputs.env }}" >> $GITHUB_ENV
          echo "CONFIG_FILE=cypress.config.${{ github.event.inputs.env }}.ts" >> $GITHUB_ENV
          echo "ENV_FILE=.env.${{ github.event.inputs.env }}" >> $GITHUB_ENV

      - name: Prepare report directory
        run: mkdir -p cypress/reports/html/.jsons

      - name: Ensure report directory exists
        run: |
          echo "Ensuring cypress/reports/html/.jsons directory exists..."
          mkdir -p cypress/reports/html/.jsons
          ls -la cypress/reports/html/.jsons

      - name: Configure Test Group Paths
        run: |
          case "${{ github.event.inputs.env }}" in
            "staging")
              echo "TEST_GROUP=cypress/e2e/ClientPortal/**/*.cy.ts" >> $GITHUB_ENV ;;
            "uat")
              echo "TEST_GROUP=cypress/e2e/ClientPortal/**/*.cy.ts" >> $GITHUB_ENV ;;
          esac

      - name: Cypress run
        continue-on-error: true
        run: |
          docker run --rm \
            --user node \
            --entrypoint /bin/bash \
            -v ${{ github.workspace }}/${{ env.CONFIG_FILE }}:/app/cypress.config.ts \
            -v ${{ github.workspace }}/cypress.common.ts:/app/cypress.common.ts \
            -v ${{ github.workspace }}/tsconfig.json:/app/tsconfig.json \
            -v ${{ github.workspace }}/cypress:/app/cypress \
            -v ${{ github.workspace }}/node_modules:/app/node_modules \
            -v ${{ github.workspace }}/package.json:/app/package.json \
            -v ${{ github.workspace }}/${{ env.ENV_FILE }}:/app/${{ env.ENV_FILE }} \
            -v ${{ github.workspace }}/.env.common:/app/.env.common \
            -v ${{ github.workspace }}/cypress/reports:/app/cypress/reports \
            $DOCKER_IMAGE -c "\
              npx cypress run \
                --spec 'cypress/e2e/**/*.cy.ts' \
                --config-file cypress.config.ts \
                --reporter mochawesome \
                --reporter-options reportDir=cypress/reports/html/.jsons,overwrite=false,html=false,json=true"

      - name: Verify mochawesome JSONs
        run: |
          echo "üîç Verifying mochawesome JSONs..."
          COUNT=$(find cypress/reports/html/.jsons -name '*.json' | wc -l)
          if [ "$COUNT" -eq 0 ]; then
            echo "‚ùå No mochawesome JSON files found! Creating an empty report..."
            mkdir -p cypress/reports/html/.jsons
            echo '{"stats":{"suites":0,"tests":0,"passes":0,"pending":0,"failures":0},"results":[]}' > cypress/reports/html/.jsons/empty.json
          fi

      - name: Merge JSON reports
        run: |
          npx mochawesome-merge cypress/reports/html/.jsons/*.json > cypress/reports/html/mochawesome.json

      - name: Generate HTML report
        run: |
          npx marge cypress/reports/html/mochawesome.json \
            --reportDir cypress/reports/html \
            --reportFilename index \
            --inline
          chmod 644 cypress/reports/html/index.html

      - name: Ensure HTML report was generated
        run: |
          if [ ! -f cypress/reports/html/index.html ]; then
            echo "‚ùå HTML report not found!"
            exit 1
          fi

      - name: Update TypeScript Configurations
        run: |
          echo "CONFIG_FILE=cypress.config.${{ github.event.inputs.env }}.ts" >> $GITHUB_ENV
          echo "ENV_FILE=.env.${{ github.event.inputs.env }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.GH_RUNNER_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_RUNNER_SECRET_KEY }}
          role-to-assume: arn:aws:iam::474782107805:role/gh-runner-assume-role-s3
          aws-region: ap-east-1
          role-duration-seconds: 1200

      - name: Upload HTML Report as Artifact
        id: upload-report
        uses: actions/upload-artifact@v4
        with:
          name: UI-automation-test-report
          path: ./cypress/reports/html/index.html

      - name: Upload Result to AWS-S3
        run: |
          FILE_NAME=ui-test-report-${{ env.ENV_NAME }}-$(date +%s).html
          echo "FILE_NAME=${FILE_NAME}" >> $GITHUB_ENV
          aws s3 cp cypress/reports/html/index.html s3://test-qa-report-474782107805/${FILE_NAME}
          HTML_PATH=https://test-qa-report-474782107805.s3.ap-east-1.amazonaws.com/${FILE_NAME}
          echo "HTML_PATH=${HTML_PATH}" >> $GITHUB_ENV
          echo "Check report here at ${HTML_PATH}"

      - name: Post Test Results to Teams
        if: always()
        run: |
          if [ -f "cypress/reports/html/index.html" ]; then
            STATUS="‚úÖ UI Automation Run Completed Successfully in ${{ env.ENV_NAME }}."
          else
            STATUS="‚ùå UI Automation Run Failed in ${{ env.ENV_NAME }}."
          fi

          curl -H "Content-Type: application/json" \
          -d "{\"text\": \"${STATUS}\n\nüìä [View Detailed Test Report](${HTML_PATH})\"}" \
          {WEBHOOK_URL}

          echo "Test results posted to Teams channel."

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up..."
          sudo rm -rf cypress node_modules
          echo "Done."
